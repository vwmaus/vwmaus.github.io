#!/usr/bin/env bash

set -e  # Exit on any error
set -u  # Treat unset variables as errors

SRC_BRANCH="master"
DEPLOY_BRANCH="gh-pages"
BUILD_DIR="_site"
DEPLOY_DIR="../_deploy_tmp"
MAIN_REPO=$(git rev-parse --show-toplevel)

echo "🔁 Checking out source branch: $SRC_BRANCH"
git checkout $SRC_BRANCH
git pull origin $SRC_BRANCH

echo "🧹 Cleaning previous build..."
rm -rf "$BUILD_DIR"
bundle exec jekyll build

echo "📁 Preparing deploy directory..."
rm -rf "$DEPLOY_DIR"
git worktree prune
git worktree add "$DEPLOY_DIR" "$DEPLOY_BRANCH"

echo "📦 Copying site contents to deploy directory..."
rsync -a --delete "$BUILD_DIR/" "$DEPLOY_DIR/"

echo "📄 Creating .nojekyll..."
touch "$DEPLOY_DIR/.nojekyll"

echo "🧼 Filtering out R-related files before commit..."
cd "$DEPLOY_DIR"
git add -A

# Remove R-related files from staging
R_PATTERNS="-name 'index_cache' -o -name 'index_data' -o -name '.Rhistory' -o -name '*.RData' -o -name '.Rproj.user'"
RESET_FILES=$(find . \( $R_PATTERNS \) 2>/dev/null || true)
if [[ -n "$RESET_FILES" ]]; then
    git reset -- $RESET_FILES || true
fi

# Get last commit message from source branch
COMMIT_MSG=$(git -C "$MAIN_REPO" log -1 --pretty=%B)

git commit -m "$COMMIT_MSG [ci skip]" || echo "Nothing to commit"

echo "🚀 Pushing to $DEPLOY_BRANCH"
git push origin "$DEPLOY_BRANCH"

echo "✅ Deployment complete."

# Cleanup
cd ..
git worktree remove "$DEPLOY_DIR" --force
